{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AvailabledatesService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"http://localhost:8080/availdates\";\n  }\n  createAvailabledates(availableDates) {\n    return this.httpClient.post(`${this.baseUrl}`, availableDates);\n  }\n  getAvailabledatesList() {\n    return this.httpClient.get(`${this.baseUrl}`);\n  }\n  getAvailabledatesById(id) {\n    return this.httpClient.get(`${this.baseUrl}/${id}`);\n  }\n  updateAvailabledates(id, availableDates) {\n    return this.httpClient.put(`${this.baseUrl}`, availableDates);\n  }\n  deleteAvailabledates(id) {\n    return this.httpClient.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function AvailabledatesService_Factory(t) {\n      return new (t || AvailabledatesService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AvailabledatesService,\n      factory: AvailabledatesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AvailabledatesService","constructor","httpClient","baseUrl","createAvailabledates","availableDates","post","getAvailabledatesList","get","getAvailabledatesById","id","updateAvailabledates","put","deleteAvailabledates","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\service\\availabledates.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Appointment } from '../model/appointment';\nimport { Availabledates } from '../model/availabledates';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AvailabledatesService {\n  private baseUrl=\"http://localhost:8080/availdates\";\n  constructor(private httpClient: HttpClient) { }\n\n  createAvailabledates(availableDates:Availabledates): Observable<any>{\n    return this.httpClient.post<any>(`${this.baseUrl}`, availableDates);\n  }\n\n\n  getAvailabledatesList(): Observable<Availabledates[]>{\n    return this.httpClient.get<Availabledates[]>(`${this.baseUrl}`);\n  }\n  getAvailabledatesById(id: number): Observable<Availabledates>{\n    return this.httpClient.get<Availabledates>(`${this.baseUrl}/${id}`);\n  }\n  updateAvailabledates(id: number, availableDates: Availabledates): Observable<Object>{\n    return this.httpClient.put(`${this.baseUrl}`,availableDates);\n  }\n\n  deleteAvailabledates(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,qBAAqB;EAEhCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAC,kCAAkC;EACJ;EAE9CC,oBAAoBA,CAACC,cAA6B;IAChD,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,cAAc,CAAC;EACrE;EAGAE,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAmB,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EACjE;EACAM,qBAAqBA,CAACC,EAAU;IAC9B,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAiB,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EACrE;EACAC,oBAAoBA,CAACD,EAAU,EAAEL,cAA8B;IAC7D,OAAO,IAAI,CAACH,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,EAAE,EAACE,cAAc,CAAC;EAC9D;EAEAQ,oBAAoBA,CAACH,EAAU;IAC7B,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;;uBArBWV,qBAAqB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAArBlB,qBAAqB;MAAAmB,OAAA,EAArBnB,qBAAqB,CAAAoB,IAAA;MAAAC,UAAA,EAFpB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}