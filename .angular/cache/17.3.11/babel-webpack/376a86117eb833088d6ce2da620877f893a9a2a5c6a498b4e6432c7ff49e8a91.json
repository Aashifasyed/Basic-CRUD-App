{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DoctorService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseUrl = \"http://localhost:8080/doctor\";\n  }\n  createDoctor(doctor) {\n    return this.httpclient.post(`${this.baseUrl}`, doctor);\n  }\n  getDoctorList() {\n    return this.httpclient.get(`${this.baseUrl}`);\n  }\n  getDoctorById(id) {\n    return this.httpclient.get(`${this.baseUrl}/${id}`);\n  }\n  updateDoctor(id, doctor) {\n    return this.httpclient.put(`${this.baseUrl}`, doctor);\n  }\n  deleteDoctor(id) {\n    return this.httpclient.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function DoctorService_Factory(t) {\n      return new (t || DoctorService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DoctorService,\n      factory: DoctorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["DoctorService","constructor","httpclient","baseUrl","createDoctor","doctor","post","getDoctorList","get","getDoctorById","id","updateDoctor","put","deleteDoctor","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\service\\doctor.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Doctor } from '../model/doctor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorService {\n  private baseUrl=\"http://localhost:8080/doctor\";\n  constructor(private httpclient: HttpClient) { }\n\n\n  createDoctor(doctor:Doctor): Observable<any>{\n    return this.httpclient.post<any>(`${this.baseUrl}`, doctor);\n  }\n\n\n  getDoctorList(): Observable<Doctor[]>{\n    return this.httpclient.get<Doctor[]>(`${this.baseUrl}`);\n  }\n  getDoctorById(id: number): Observable<Doctor>{\n    return this.httpclient.get<Doctor>(`${this.baseUrl}/${id}`);\n  }\n  updateDoctor(id: number, doctor: Doctor): Observable<Object>{\n    return this.httpclient.put(`${this.baseUrl}`,doctor);\n  }\n\n  deleteDoctor(id: number): Observable<Object>{\n    return this.httpclient.delete(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAC,8BAA8B;EACA;EAG9CC,YAAYA,CAACC,MAAa;IACxB,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,MAAM,CAAC;EAC7D;EAGAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EACzD;EACAM,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC7D;EACAC,YAAYA,CAACD,EAAU,EAAEL,MAAc;IACrC,OAAO,IAAI,CAACH,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,EAAE,EAACE,MAAM,CAAC;EACtD;EAEAQ,YAAYA,CAACH,EAAU;IACrB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;;uBAtBWV,aAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAblB,aAAa;MAAAmB,OAAA,EAAbnB,aAAa,CAAAoB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}