{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"http://localhost:8080/user\";\n  }\n  getUserList() {\n    return this.httpClient.get(`${this.baseUrl}`);\n  }\n  createUser(user) {\n    return this.httpClient.post(\"http://localhost:8080/registeruser\", user);\n  }\n  loginUserFromRemote(user) {\n    return this.httpClient.post(\"http://localhost:8080/login\", user);\n  }\n  registerUserFromRemote(user) {\n    return this.httpClient.post(\"http://localhost:8080/registeruser\", user);\n  }\n  getUserById(id) {\n    return this.httpClient.get(`${this.baseUrl}/${id}`);\n  }\n  updateUser(id, user) {\n    return this.httpClient.put(`${this.baseUrl}`, user);\n  }\n  deleteUser(id) {\n    return this.httpClient.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UserService","constructor","httpClient","baseUrl","getUserList","get","createUser","user","post","loginUserFromRemote","registerUserFromRemote","getUserById","id","updateUser","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n\n  private baseUrl=\"http://localhost:8080/user\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUserList(): Observable<User[]>{\n    return this.httpClient.get<User[]>(`${this.baseUrl}`);\n  }\n\n  createUser(user:User): Observable<Object>{\n    return this.httpClient.post(\"http://localhost:8080/registeruser\", user);\n  }\n\n  public loginUserFromRemote(user : User): Observable<any>{\n    return this.httpClient.post<any>(\"http://localhost:8080/login\", user)\n  }\n\n  public registerUserFromRemote(user : User):Observable<any>{\n    return this.httpClient.post<any>(\"http://localhost:8080/registeruser\", user)\n  }\n\n  getUserById(id: number): Observable<User>{\n    return this.httpClient.get<User>(`${this.baseUrl}/${id}`);\n  }\n\n  updateUser(id: number, user: User): Observable<Object>{\n  return this.httpClient.put(`${this.baseUrl}`,user);\n}\n\ndeleteUser(id: number): Observable<Object>{\n  return this.httpClient.delete(`${this.baseUrl}/${id}`);\n}\n\n}\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAC,4BAA4B;EAEE;EAE9CC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EACvD;EAEAG,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,oCAAoC,EAAED,IAAI,CAAC;EACzE;EAEOE,mBAAmBA,CAACF,IAAW;IACpC,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAM,6BAA6B,EAAED,IAAI,CAAC;EACvE;EAEOG,sBAAsBA,CAACH,IAAW;IACvC,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAM,oCAAoC,EAAED,IAAI,CAAC;EAC9E;EAEAI,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACV,UAAU,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,IAAIS,EAAE,EAAE,CAAC;EAC3D;EAEAC,UAAUA,CAACD,EAAU,EAAEL,IAAU;IACjC,OAAO,IAAI,CAACL,UAAU,CAACY,GAAG,CAAC,GAAG,IAAI,CAACX,OAAO,EAAE,EAACI,IAAI,CAAC;EACpD;EAEAQ,UAAUA,CAACH,EAAU;IACnB,OAAO,IAAI,CAACV,UAAU,CAACc,MAAM,CAAC,GAAG,IAAI,CAACb,OAAO,IAAIS,EAAE,EAAE,CAAC;EACxD;;;uBAhCaZ,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXpB,WAAW;MAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;MAAAC,UAAA,EAHV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}