{"ast":null,"code":"import { User } from '../model/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = () => [\"/registration\"];\nexport class LoginComponent {\n  constructor(userService, _router) {\n    this.userService = userService;\n    this._router = _router;\n    this.user = new User();\n    this.msg = \"\";\n  }\n  ngOnInit() {}\n  loginUser() {\n    this.userService.loginUserFromRemote(this.user).subscribe(data => {\n      console.log(\"response received\");\n      console.log(data);\n      localStorage.setItem('userid', String(data.userId));\n      localStorage.setItem('username', data.userName);\n      localStorage.setItem('password', data.password);\n      localStorage.setItem('role', data.role);\n      this._router.navigate(['/landing-page/user-list']);\n    }, error => {\n      console.log(\"exception occured\");\n      this.msg = \"Bad Credential, Please enter valid user name and password\";\n    });\n  }\n  gotoregistration() {\n    this._router.navigate(['/registration']);\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 32,\n      vars: 14,\n      consts: [[\"loginform\", \"ngForm\"], [\"username\", \"ngModel\"], [\"password\", \"ngModel\"], [1, \"container\"], [1, \"text-center\", \"my-5\"], [3, \"ngSubmit\"], [1, \"text-danger\"], [1, \"form-group\", \"mt-5\"], [\"for\", \"email\"], [\"type\", \"text\", \"placeholder\", \"Enter User Name\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"form-group\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"placeholder\", \"Enter password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"form-group\", \"form-check\"], [1, \"form-check-label\"], [\"type\", \"checkbox\", \"name\", \"remember\", 1, \"form-check-input\"], [1, \"text-center\", \"mt-5\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"btn\", \"btn-success\", \"float-right\", \"btextual\", 3, \"routerLink\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 3)(1, \"h1\", 4)(2, \"u\");\n          i0.ɵɵtext(3, \"Login User\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"form\", 5, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.loginUser());\n          });\n          i0.ɵɵelementStart(6, \"small\", 6);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"User Name :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 9, 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.user.userName, $event) || (ctx.user.userName = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"small\", 6);\n          i0.ɵɵtext(14, \"User name is required field\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 10)(16, \"label\", 11);\n          i0.ɵɵtext(17, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"input\", 12, 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.user.password, $event) || (ctx.user.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"small\", 6);\n          i0.ɵɵtext(21, \"Password is required field\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 13)(23, \"label\", 14);\n          i0.ɵɵelement(24, \"input\", 15);\n          i0.ɵɵtext(25, \" Remember me \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\", 16)(27, \"button\", 17);\n          i0.ɵɵtext(28, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(29, \"\\u00A0\\u00A0 \");\n          i0.ɵɵelementStart(30, \"button\", 18);\n          i0.ɵɵtext(31, \"New user ? Register here\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          const loginform_r2 = i0.ɵɵreference(5);\n          const username_r3 = i0.ɵɵreference(12);\n          const password_r4 = i0.ɵɵreference(19);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.msg);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", username_r3.invalid && username_r3.touched);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.userName);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"d-none\", username_r3.valid || username_r3.untouched);\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"is-invalid\", password_r4.invalid && password_r4.touched);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"d-none\", password_r4.valid || password_r4.untouched);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"disabled\", loginform_r2.form.invalid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(13, _c0));\n        }\n      },\n      dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["User","LoginComponent","constructor","userService","_router","user","msg","ngOnInit","loginUser","loginUserFromRemote","subscribe","data","console","log","localStorage","setItem","String","userId","userName","password","role","navigate","error","gotoregistration","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵtwoWayListener","LoginComponent_Template_input_ngModelChange_11_listener","$event","ɵɵtwoWayBindingSet","LoginComponent_Template_input_ngModelChange_18_listener","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵclassProp","username_r3","invalid","touched","ɵɵtwoWayProperty","valid","untouched","password_r4","ɵɵproperty","loginform_r2","form","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\login\\login.component.ts","C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IUser } from '../interface/user.interface';\nimport { User } from '../model/user';\nimport { UserService } from '../service/user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user = new User();\n  msg=\"\";\n\n  constructor(private userService: UserService, private _router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser(){\n    this.userService.loginUserFromRemote(this.user).subscribe(\n      (data: IUser) => {\n        console.log(\"response received\");\n        console.log(data);\n        localStorage.setItem('userid', String(data.userId));\n        localStorage.setItem('username', data.userName);\n        localStorage.setItem('password', data.password);\n        localStorage.setItem('role', data.role);\n\n        this._router.navigate(['/landing-page/user-list'])\n      },\n      error => {\n        console.log(\"exception occured\");\n        this.msg = \"Bad Credential, Please enter valid user name and password\";\n      }\n    );\n  }\n\n  gotoregistration(){\n    this._router.navigate(['/registration'])\n  }\n\n}\n","\n<div class=\"container\">\n  <h1 class=\"text-center my-5\"> <u>Login User</u> </h1>\n  <form #loginform=\"ngForm\" (ngSubmit)=\"loginUser()\">\n    <small class=\"text-danger\">{{msg}}</small>\n    <div class=\"form-group mt-5\">\n      <label for=\"email\">User Name :</label>\n      <input type=\"text\" class=\"form-control\"  placeholder=\"Enter User Name\" name=\"username\" [(ngModel)]=\"user.userName\" required #username=\"ngModel\"\n      [class.is-invalid]=\"username.invalid && username.touched\"\n      >\n      <small class=\"text-danger\" [class.d-none]=\"username.valid ||username.untouched\">User name is required field</small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"pwd\">Password:</label>\n      <input type=\"password\" class=\"form-control\"  placeholder=\"Enter password\" name=\"password\" [(ngModel)]=\"user.password\" required #password=\"ngModel\"\n      [class.is-invalid]=\"password.invalid && password.touched\"\n      >\n      <small class=\"text-danger\" [class.d-none]=\"password.valid ||password.untouched\">Password is required field</small>\n    </div>\n\n    <!-- <div class=\"form-group\">\n      <label for=\"email\">User Role :</label>\n      <select name=\"role\" class=\"custom-select\" placeholder=\"Select Role\" [(ngModel)]=\"user.role\">\n        <option selected> Select Role</option>\n        <option value=\"ADMIN\">ADMIN</option>\n        <option value=\"NORMAL\">NORMAL</option>\n      </select>\n    </div> -->\n\n    <div class=\"form-group form-check\">\n      <label class=\"form-check-label\">\n        <input class=\"form-check-input\" type=\"checkbox\" name=\"remember\"> Remember me\n      </label>\n    </div>\n    <div class=\"text-center mt-5\">\n      <button [disabled]=\"loginform.form.invalid\" type=\"submit\" class=\"btn btn-success\">Login</button>&nbsp;&nbsp;\n      <button class=\"btn btn-success float-right btextual\" [routerLink]=\"['/registration']\">New user ? Register here</button>\n    </div>\n\n  </form>\n  <!-- <small class=\"float-right\" (click)=\"gotoregistration()\">New user ? Register here</small> -->\n  <!-- <small class=\"float-right\" [routerLink]=\"['/registration']\">New user ? Register here</small> -->\n\n</div>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}