{"ast":null,"code":"import { Availabledates } from 'src/app/model/availabledates';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/availabledates.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateAvailabilityComponent {\n  constructor(availabledateService, route, router) {\n    this.availabledateService = availabledateService;\n    this.route = route;\n    this.router = router;\n    this.availabledate = new Availabledates();\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.availabledateService.getAvailabledatesById(this.id).subscribe(data => {\n      this.availabledate = data;\n    }, error => console.log(error));\n  }\n  saveAvailitydate() {\n    this.availabledateService.updateAvailabledates(this.id, this.availabledate).subscribe(data => {\n      this.goToAvailablilitydateList();\n    }, error => console.log(error));\n  }\n  goToAvailablilitydateList() {\n    this.router.navigate(['/landing-page/availabilitydates-list']);\n  }\n  static {\n    this.ɵfac = function UpdateAvailabilityComponent_Factory(t) {\n      return new (t || UpdateAvailabilityComponent)(i0.ɵɵdirectiveInject(i1.AvailabledatesService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdateAvailabilityComponent,\n      selectors: [[\"app-update-availability\"]],\n      decls: 26,\n      vars: 4,\n      consts: [[1, \"col-md-6\", \"offset-md-3\", 2, \"margin-bottom\", \"100px\"], [1, \"text-center\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"availabilityId\", \"name\", \"availabilityId\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"id\", \"doctorId\", \"name\", \"doctorId\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"date\", \"id\", \"fromDate\", \"name\", \"fromDate\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n      template: function UpdateAvailabilityComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"hr\")(2, \"br\");\n          i0.ɵɵelementStart(3, \"h3\", 1)(4, \"u\");\n          i0.ɵɵtext(5, \"Update Availity Date\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function UpdateAvailabilityComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.saveAvailitydate();\n          });\n          i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\");\n          i0.ɵɵtext(9, \"Availabledate Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateAvailabilityComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.availabledate.availabilityId, $event) || (ctx.availabledate.availabilityId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\");\n          i0.ɵɵtext(13, \"Doctor Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateAvailabilityComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.availabledate.doctor.doctorId, $event) || (ctx.availabledate.doctor.doctorId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\");\n          i0.ɵɵtext(17, \"Appointment From Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateAvailabilityComponent_Template_input_ngModelChange_18_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.availabledate.fromDate, $event) || (ctx.availabledate.fromDate = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\");\n          i0.ɵɵtext(21, \"Appointment End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateAvailabilityComponent_Template_input_ngModelChange_22_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.availabledate.endDate, $event) || (ctx.availabledate.endDate = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\", 1)(24, \"button\", 8);\n          i0.ɵɵtext(25, \"Update\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.availabledate.availabilityId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.availabledate.doctor.doctorId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.availabledate.fromDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.availabledate.endDate);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Availabledates","UpdateAvailabilityComponent","constructor","availabledateService","route","router","availabledate","ngOnInit","id","snapshot","params","getAvailabledatesById","subscribe","data","error","console","log","saveAvailitydate","updateAvailabledates","goToAvailablilitydateList","navigate","i0","ɵɵdirectiveInject","i1","AvailabledatesService","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","UpdateAvailabilityComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateAvailabilityComponent_Template_form_ngSubmit_6_listener","ɵɵtwoWayListener","UpdateAvailabilityComponent_Template_input_ngModelChange_10_listener","$event","ɵɵtwoWayBindingSet","availabilityId","UpdateAvailabilityComponent_Template_input_ngModelChange_14_listener","doctor","doctorId","UpdateAvailabilityComponent_Template_input_ngModelChange_18_listener","fromDate","UpdateAvailabilityComponent_Template_input_ngModelChange_22_listener","endDate","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\landing-page\\availabilitydates\\update-availability\\update-availability.component.ts","C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\landing-page\\availabilitydates\\update-availability\\update-availability.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Availabledates } from 'src/app/model/availabledates';\nimport { AvailabledatesService } from 'src/app/service/availabledates.service';\n\n@Component({\n  selector: 'app-update-availability',\n  templateUrl: './update-availability.component.html',\n  styleUrls: ['./update-availability.component.css']\n})\nexport class UpdateAvailabilityComponent implements OnInit {\n\n  id: number;\n  availabledate: Availabledates = new Availabledates();\n\n  constructor(private availabledateService: AvailabledatesService, private route: ActivatedRoute, private router:Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.availabledateService.getAvailabledatesById(this.id).subscribe(\n      data => {\n        this.availabledate=data;\n      }, error => console.log(error)\n    );\n  }\n\n\n  saveAvailitydate(){\n    this.availabledateService.updateAvailabledates(this.id, this.availabledate).subscribe(data =>{\n        this.goToAvailablilitydateList();\n    }, error => console.log(error));\n  }\n\n  goToAvailablilitydateList(){\n    this.router.navigate(['/landing-page/availabilitydates-list'])\n  }\n\n}\n","\n<div class=\"col-md-6 offset-md-3 \" style=\"margin-bottom: 100px;\">\n  <hr><br>\n  <h3 class=\"text-center\"><u>Update Availity Date</u></h3>\n  <form (ngSubmit) = \"saveAvailitydate()\" >\n\n    <div class=\"form-group\">\n      <label>Availabledate Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"availabilityId\"\n        [(ngModel)] = \"availabledate.availabilityId\" name=\"availabilityId\">\n    </div>\n\n\n    <div class=\"form-group\">\n      <label>Doctor Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"doctorId\"\n        [(ngModel)] = \"availabledate.doctor.doctorId\" name=\"doctorId\">\n    </div>\n    <div class=\"form-group\">\n      <label>Appointment From Date</label>\n      <input type=\"date\" class=\"form-control\" id=\"fromDate\"\n        [(ngModel)] = \"availabledate.fromDate\" name=\"fromDate\">\n    </div>\n    <div class=\"form-group\">\n      <label>Appointment End Date</label>\n      <input type=\"date\" class=\"form-control\" id=\"endDate\"\n        [(ngModel)] = \"availabledate.endDate\" name=\"endDate\">\n    </div>\n\n\n    <div class=\"text-center\">\n      <button class=\"btn btn-success \" type=\"submit\">Update</button>\n    </div>\n</form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}