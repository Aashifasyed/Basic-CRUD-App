{"ast":null,"code":"import { Availabledates } from 'src/app/model/availabledates';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/availabledates.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CreateAvailabilityComponent {\n  constructor(availabilitydateService, router) {\n    this.availabilitydateService = availabilitydateService;\n    this.router = router;\n    this.availabledate = new Availabledates();\n  }\n  ngOnInit() {}\n  saveAvailabledate() {\n    this.availabilitydateService.updateAvailabledates(this.id, this.availabledate).subscribe(data => {\n      console.log(data);\n      this.goToAvailabledateList();\n    }, error => console.log(error));\n  }\n  goToAvailabledateList() {\n    this.router.navigate(['/landing-page/availabilitydates-list']);\n  }\n  static {\n    this.ɵfac = function CreateAvailabilityComponent_Factory(t) {\n      return new (t || CreateAvailabilityComponent)(i0.ɵɵdirectiveInject(i1.AvailabledatesService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateAvailabilityComponent,\n      selectors: [[\"app-create-availability\"]],\n      decls: 26,\n      vars: 4,\n      consts: [[1, \"col-md-6\", \"offset-md-3\", 2, \"margin-bottom\", \"100px\"], [1, \"text-center\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"availabilityId\", \"name\", \"availabilityId\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"id\", \"doctorId\", \"name\", \"doctorId\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"date\", \"id\", \"fromDate\", \"name\", \"fromDate\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n      template: function CreateAvailabilityComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"hr\")(2, \"br\");\n          i0.ɵɵelementStart(3, \"h3\", 1)(4, \"u\");\n          i0.ɵɵtext(5, \"Create Availabledate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function CreateAvailabilityComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.saveAvailabledate();\n          });\n          i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\");\n          i0.ɵɵtext(9, \"Availabledate Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateAvailabilityComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.availabledate.availabilityId, $event) || (ctx.availabledate.availabilityId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\");\n          i0.ɵɵtext(13, \"Doctor Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateAvailabilityComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.availabledate.doctor.doctorId, $event) || (ctx.availabledate.doctor.doctorId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\");\n          i0.ɵɵtext(17, \"Appointment From Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateAvailabilityComponent_Template_input_ngModelChange_18_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.availabledate.fromDate, $event) || (ctx.availabledate.fromDate = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\");\n          i0.ɵɵtext(21, \"Appointment End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateAvailabilityComponent_Template_input_ngModelChange_22_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.availabledate.endDate, $event) || (ctx.availabledate.endDate = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\", 1)(24, \"button\", 8);\n          i0.ɵɵtext(25, \"Submit\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.availabledate.availabilityId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.availabledate.doctor.doctorId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.availabledate.fromDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.availabledate.endDate);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Availabledates","CreateAvailabilityComponent","constructor","availabilitydateService","router","availabledate","ngOnInit","saveAvailabledate","updateAvailabledates","id","subscribe","data","console","log","goToAvailabledateList","error","navigate","i0","ɵɵdirectiveInject","i1","AvailabledatesService","i2","Router","selectors","decls","vars","consts","template","CreateAvailabilityComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateAvailabilityComponent_Template_form_ngSubmit_6_listener","ɵɵtwoWayListener","CreateAvailabilityComponent_Template_input_ngModelChange_10_listener","$event","ɵɵtwoWayBindingSet","availabilityId","CreateAvailabilityComponent_Template_input_ngModelChange_14_listener","doctor","doctorId","CreateAvailabilityComponent_Template_input_ngModelChange_18_listener","fromDate","CreateAvailabilityComponent_Template_input_ngModelChange_22_listener","endDate","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\landing-page\\availabilitydates\\create-availability\\create-availability.component.ts","C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\landing-page\\availabilitydates\\create-availability\\create-availability.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Availabledates } from 'src/app/model/availabledates';\nimport { AvailabledatesService } from 'src/app/service/availabledates.service';\n\n@Component({\n  selector: 'app-create-availability',\n  templateUrl: './create-availability.component.html',\n  styleUrls: ['./create-availability.component.css']\n})\nexport class CreateAvailabilityComponent implements OnInit {\n  id: number;\n  availabledate: Availabledates = new Availabledates();\n  constructor(private availabilitydateService: AvailabledatesService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  saveAvailabledate(){\n    this.availabilitydateService.updateAvailabledates(this.id, this.availabledate).subscribe(data=>{\n      console.log(data);\n      this.goToAvailabledateList();\n    }, error => console.log(error));\n  }\n\n  goToAvailabledateList(){\n    this.router.navigate(['/landing-page/availabilitydates-list']);\n  }\n\n}\n","\n<div class=\"col-md-6 offset-md-3 \" style=\"margin-bottom: 100px;\">\n  <hr><br>\n  <h3 class=\"text-center\"><u>Create Availabledate</u></h3>\n  <form (ngSubmit) = \"saveAvailabledate()\" >\n\n    <div class=\"form-group\">\n      <label>Availabledate Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"availabilityId\"\n        [(ngModel)] = \"availabledate.availabilityId\" name=\"availabilityId\">\n    </div>\n\n\n    <div class=\"form-group\">\n      <label>Doctor Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"doctorId\"\n        [(ngModel)] = \"availabledate.doctor.doctorId\" name=\"doctorId\">\n    </div>\n    <div class=\"form-group\">\n      <label>Appointment From Date</label>\n      <input type=\"date\" class=\"form-control\" id=\"fromDate\"\n        [(ngModel)] = \"availabledate.fromDate\" name=\"fromDate\">\n    </div>\n    <div class=\"form-group\">\n      <label>Appointment End Date</label>\n      <input type=\"date\" class=\"form-control\" id=\"endDate\"\n        [(ngModel)] = \"availabledate.endDate\" name=\"endDate\">\n    </div>\n\n\n    <div class=\"text-center\">\n      <button class=\"btn btn-success \" type=\"submit\">Submit</button>\n    </div>\n</form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}