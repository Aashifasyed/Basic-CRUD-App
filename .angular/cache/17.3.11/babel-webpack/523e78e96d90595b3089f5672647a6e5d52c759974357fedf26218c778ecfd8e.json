{"ast":null,"code":"import { Feedback } from 'src/app/model/feedback';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/feedback.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateFeedbackComponent {\n  constructor(feedbackService, route, router) {\n    this.feedbackService = feedbackService;\n    this.route = route;\n    this.router = router;\n    this.feedback = new Feedback();\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.feedbackService.getFeedbackById(this.id).subscribe(data => {\n      this.feedback = data;\n    }, error => console.log(error));\n  }\n  saveFeedback() {\n    this.feedbackService.updateFeedback(this.id, this.feedback).subscribe(data => {\n      this.goToFeedbackList();\n    }, error => console.log(error));\n  }\n  goToFeedbackList() {\n    this.router.navigate(['/landing-page/feedback-list']);\n  }\n  static {\n    this.ɵfac = function UpdateFeedbackComponent_Factory(t) {\n      return new (t || UpdateFeedbackComponent)(i0.ɵɵdirectiveInject(i1.FeedbackService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdateFeedbackComponent,\n      selectors: [[\"app-update-feedback\"]],\n      decls: 30,\n      vars: 5,\n      consts: [[1, \"col-md-6\", \"offset-md-3\", 2, \"margin-bottom\", \"100px\"], [1, \"text-center\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"feedbackId\", \"name\", \"feedbackId\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"id\", \"rating\", \"name\", \"rating\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"id\", \"patientId\", \"name\", \"patientId\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"id\", \"doctorId\", \"name\", \"doctorId\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"id\", \"feedbackComment\", \"name\", \"feedbackComment\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n      template: function UpdateFeedbackComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"hr\")(2, \"br\");\n          i0.ɵɵelementStart(3, \"h3\", 1)(4, \"u\");\n          i0.ɵɵtext(5, \"Update Feedback\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function UpdateFeedbackComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.saveFeedback();\n          });\n          i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\");\n          i0.ɵɵtext(9, \"Feedback Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateFeedbackComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.feedback.feedbackId, $event) || (ctx.feedback.feedbackId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\");\n          i0.ɵɵtext(13, \"Rating\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateFeedbackComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.feedback.rating, $event) || (ctx.feedback.rating = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\");\n          i0.ɵɵtext(17, \"Patient Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateFeedbackComponent_Template_input_ngModelChange_18_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.feedback.patient.patientId, $event) || (ctx.feedback.patient.patientId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\");\n          i0.ɵɵtext(21, \"Doctor Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateFeedbackComponent_Template_input_ngModelChange_22_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.feedback.doctor.doctorId, $event) || (ctx.feedback.doctor.doctorId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\");\n          i0.ɵɵtext(25, \"Feedback Comment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateFeedbackComponent_Template_input_ngModelChange_26_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.feedback.feedbackComment, $event) || (ctx.feedback.feedbackComment = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 1)(28, \"button\", 9);\n          i0.ɵɵtext(29, \"Update\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.feedback.feedbackId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.feedback.rating);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.feedback.patient.patientId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.feedback.doctor.doctorId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.feedback.feedbackComment);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Feedback","UpdateFeedbackComponent","constructor","feedbackService","route","router","feedback","ngOnInit","id","snapshot","params","getFeedbackById","subscribe","data","error","console","log","saveFeedback","updateFeedback","goToFeedbackList","navigate","i0","ɵɵdirectiveInject","i1","FeedbackService","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","UpdateFeedbackComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateFeedbackComponent_Template_form_ngSubmit_6_listener","ɵɵtwoWayListener","UpdateFeedbackComponent_Template_input_ngModelChange_10_listener","$event","ɵɵtwoWayBindingSet","feedbackId","UpdateFeedbackComponent_Template_input_ngModelChange_14_listener","rating","UpdateFeedbackComponent_Template_input_ngModelChange_18_listener","patient","patientId","UpdateFeedbackComponent_Template_input_ngModelChange_22_listener","doctor","doctorId","UpdateFeedbackComponent_Template_input_ngModelChange_26_listener","feedbackComment","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\landing-page\\feedback\\update-feedback\\update-feedback.component.ts","C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\landing-page\\feedback\\update-feedback\\update-feedback.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Feedback } from 'src/app/model/feedback';\nimport { FeedbackService } from 'src/app/service/feedback.service';\n\n@Component({\n  selector: 'app-update-feedback',\n  templateUrl: './update-feedback.component.html',\n  styleUrls: ['./update-feedback.component.css']\n})\nexport class UpdateFeedbackComponent implements OnInit {\n\n  id: number;\n  feedback: Feedback = new Feedback();\n\n  constructor(private feedbackService: FeedbackService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.feedbackService.getFeedbackById(this.id).subscribe(\n      data => {\n        this.feedback=data;\n      }, error => console.log(error)\n    );\n  }\n\n  saveFeedback(){\n    this.feedbackService.updateFeedback(this.id, this.feedback).subscribe(data =>{\n        this.goToFeedbackList();\n    }, error => console.log(error));\n  }\n\n  goToFeedbackList(){\n    this.router.navigate(['/landing-page/feedback-list'])\n  }\n\n}\n","\n<div class=\"col-md-6 offset-md-3 \" style=\"margin-bottom: 100px;\">\n  <hr><br>\n  <h3 class=\"text-center\"><u>Update Feedback</u></h3>\n  <form (ngSubmit) = \"saveFeedback()\" >\n\n    <div class=\"form-group\">\n      <label>Feedback Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"feedbackId\"\n        [(ngModel)] = \"feedback.feedbackId\" name=\"feedbackId\">\n    </div>\n    <div class=\"form-group\">\n      <label>Rating</label>\n      <input type=\"text\" class=\"form-control\" id=\"rating\"\n        [(ngModel)] = \"feedback.rating\" name=\"rating\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Patient Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"patientId\"\n        [(ngModel)] = \"feedback.patient.patientId\" name=\"patientId\">\n    </div>\n    <div class=\"form-group\">\n      <label>Doctor Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"doctorId\"\n        [(ngModel)] = \"feedback.doctor.doctorId\" name=\"doctorId\">\n    </div>\n    <div class=\"form-group\">\n      <label>Feedback Comment</label>\n      <input type=\"text\" class=\"form-control\" id=\"feedbackComment\"\n        [(ngModel)] = \"feedback.feedbackComment\" name=\"feedbackComment\">\n    </div>\n\n    <div class=\"text-center\">\n      <button class=\"btn btn-success \" type=\"submit\">Update</button>\n    </div>\n</form>\n</div>\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,wBAAwB;;;;;AAQjD,OAAM,MAAOC,uBAAuB;EAKlCC,YAAoBC,eAAgC,EAAUC,KAAqB,EAAUC,MAAc;IAAvF,KAAAF,eAAe,GAAfA,eAAe;IAA2B,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAFnG,KAAAC,QAAQ,GAAa,IAAIN,QAAQ,EAAE;EAE4E;EAE/GO,QAAQA,CAAA;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACP,eAAe,CAACQ,eAAe,CAAC,IAAI,CAACH,EAAE,CAAC,CAACI,SAAS,CACrDC,IAAI,IAAG;MACL,IAAI,CAACP,QAAQ,GAACO,IAAI;IACpB,CAAC,EAAEC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC/B;EACH;EAEAG,YAAYA,CAAA;IACV,IAAI,CAACd,eAAe,CAACe,cAAc,CAAC,IAAI,CAACV,EAAE,EAAE,IAAI,CAACF,QAAQ,CAAC,CAACM,SAAS,CAACC,IAAI,IAAG;MACzE,IAAI,CAACM,gBAAgB,EAAE;IAC3B,CAAC,EAAEL,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACjC;EAEAK,gBAAgBA,CAAA;IACd,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC;EACvD;;;uBAxBWnB,uBAAuB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,MAAA;IAAA;EAAA;;;YAAvB1B,uBAAuB;MAAA2B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTpCb,EAAA,CAAAe,cAAA,aAAiE;UAC3Df,EAAJ,CAAAgB,SAAA,SAAI,SAAI;UACgBhB,EAAxB,CAAAe,cAAA,YAAwB,QAAG;UAAAf,EAAA,CAAAiB,MAAA,sBAAe;UAAIjB,EAAJ,CAAAkB,YAAA,EAAI,EAAK;UACnDlB,EAAA,CAAAe,cAAA,cAAqC;UAA/Bf,EAAA,CAAAmB,UAAA,sBAAAC,0DAAA;YAAA,OAAcN,GAAA,CAAAlB,YAAA,EAAc;UAAA,EAAC;UAG/BI,EADF,CAAAe,cAAA,aAAwB,YACf;UAAAf,EAAA,CAAAiB,MAAA,kBAAW;UAAAjB,EAAA,CAAAkB,YAAA,EAAQ;UAC1BlB,EAAA,CAAAe,cAAA,gBACwD;UAAtDf,EAAA,CAAAqB,gBAAA,2BAAAC,iEAAAC,MAAA;YAAAvB,EAAA,CAAAwB,kBAAA,CAAAV,GAAA,CAAA7B,QAAA,CAAAwC,UAAA,EAAAF,MAAA,MAAAT,GAAA,CAAA7B,QAAA,CAAAwC,UAAA,GAAAF,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAmC;UACvCvB,EAFE,CAAAkB,YAAA,EACwD,EACpD;UAEJlB,EADF,CAAAe,cAAA,cAAwB,aACf;UAAAf,EAAA,CAAAiB,MAAA,cAAM;UAAAjB,EAAA,CAAAkB,YAAA,EAAQ;UACrBlB,EAAA,CAAAe,cAAA,gBACgD;UAA9Cf,EAAA,CAAAqB,gBAAA,2BAAAK,iEAAAH,MAAA;YAAAvB,EAAA,CAAAwB,kBAAA,CAAAV,GAAA,CAAA7B,QAAA,CAAA0C,MAAA,EAAAJ,MAAA,MAAAT,GAAA,CAAA7B,QAAA,CAAA0C,MAAA,GAAAJ,MAAA;YAAA,OAAAA,MAAA;UAAA,EAA+B;UACnCvB,EAFE,CAAAkB,YAAA,EACgD,EAC5C;UAGJlB,EADF,CAAAe,cAAA,cAAwB,aACf;UAAAf,EAAA,CAAAiB,MAAA,kBAAU;UAAAjB,EAAA,CAAAkB,YAAA,EAAQ;UACzBlB,EAAA,CAAAe,cAAA,gBAC8D;UAA5Df,EAAA,CAAAqB,gBAAA,2BAAAO,iEAAAL,MAAA;YAAAvB,EAAA,CAAAwB,kBAAA,CAAAV,GAAA,CAAA7B,QAAA,CAAA4C,OAAA,CAAAC,SAAA,EAAAP,MAAA,MAAAT,GAAA,CAAA7B,QAAA,CAAA4C,OAAA,CAAAC,SAAA,GAAAP,MAAA;YAAA,OAAAA,MAAA;UAAA,EAA0C;UAC9CvB,EAFE,CAAAkB,YAAA,EAC8D,EAC1D;UAEJlB,EADF,CAAAe,cAAA,cAAwB,aACf;UAAAf,EAAA,CAAAiB,MAAA,iBAAS;UAAAjB,EAAA,CAAAkB,YAAA,EAAQ;UACxBlB,EAAA,CAAAe,cAAA,gBAC2D;UAAzDf,EAAA,CAAAqB,gBAAA,2BAAAU,iEAAAR,MAAA;YAAAvB,EAAA,CAAAwB,kBAAA,CAAAV,GAAA,CAAA7B,QAAA,CAAA+C,MAAA,CAAAC,QAAA,EAAAV,MAAA,MAAAT,GAAA,CAAA7B,QAAA,CAAA+C,MAAA,CAAAC,QAAA,GAAAV,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAwC;UAC5CvB,EAFE,CAAAkB,YAAA,EAC2D,EACvD;UAEJlB,EADF,CAAAe,cAAA,cAAwB,aACf;UAAAf,EAAA,CAAAiB,MAAA,wBAAgB;UAAAjB,EAAA,CAAAkB,YAAA,EAAQ;UAC/BlB,EAAA,CAAAe,cAAA,gBACkE;UAAhEf,EAAA,CAAAqB,gBAAA,2BAAAa,iEAAAX,MAAA;YAAAvB,EAAA,CAAAwB,kBAAA,CAAAV,GAAA,CAAA7B,QAAA,CAAAkD,eAAA,EAAAZ,MAAA,MAAAT,GAAA,CAAA7B,QAAA,CAAAkD,eAAA,GAAAZ,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAwC;UAC5CvB,EAFE,CAAAkB,YAAA,EACkE,EAC9D;UAGJlB,EADF,CAAAe,cAAA,cAAyB,iBACwB;UAAAf,EAAA,CAAAiB,MAAA,cAAM;UAG3DjB,EAH2D,CAAAkB,YAAA,EAAS,EAC1D,EACH,EACD;;;UA5BElB,EAAA,CAAAoC,SAAA,IAAmC;UAAnCpC,EAAA,CAAAqC,gBAAA,YAAAvB,GAAA,CAAA7B,QAAA,CAAAwC,UAAA,CAAmC;UAKnCzB,EAAA,CAAAoC,SAAA,GAA+B;UAA/BpC,EAAA,CAAAqC,gBAAA,YAAAvB,GAAA,CAAA7B,QAAA,CAAA0C,MAAA,CAA+B;UAM/B3B,EAAA,CAAAoC,SAAA,GAA0C;UAA1CpC,EAAA,CAAAqC,gBAAA,YAAAvB,GAAA,CAAA7B,QAAA,CAAA4C,OAAA,CAAAC,SAAA,CAA0C;UAK1C9B,EAAA,CAAAoC,SAAA,GAAwC;UAAxCpC,EAAA,CAAAqC,gBAAA,YAAAvB,GAAA,CAAA7B,QAAA,CAAA+C,MAAA,CAAAC,QAAA,CAAwC;UAKxCjC,EAAA,CAAAoC,SAAA,GAAwC;UAAxCpC,EAAA,CAAAqC,gBAAA,YAAAvB,GAAA,CAAA7B,QAAA,CAAAkD,eAAA,CAAwC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}