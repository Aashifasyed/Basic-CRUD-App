{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FeedbackService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"http://localhost:8080/feedback\";\n  }\n  createFeedback(feedback) {\n    return this.httpClient.post(`${this.baseUrl}`, feedback);\n  }\n  getFeedbackList() {\n    return this.httpClient.get(`${this.baseUrl}`);\n  }\n  getFeedbackById(id) {\n    return this.httpClient.get(`${this.baseUrl}/${id}`);\n  }\n  updateFeedback(id, feedback) {\n    return this.httpClient.put(`${this.baseUrl}`, feedback);\n  }\n  deleteFeedback(id) {\n    return this.httpClient.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function FeedbackService_Factory(t) {\n      return new (t || FeedbackService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FeedbackService,\n      factory: FeedbackService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["FeedbackService","constructor","httpClient","baseUrl","createFeedback","feedback","post","getFeedbackList","get","getFeedbackById","id","updateFeedback","put","deleteFeedback","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\service\\feedback.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feedback } from '../model/feedback';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n  private baseUrl=\"http://localhost:8080/feedback\";\n  constructor(private httpClient: HttpClient) { }\n\n  createFeedback(feedback:Feedback): Observable<any>{\n    return this.httpClient.post<any>(`${this.baseUrl}`, feedback);\n  }\n\n\n  getFeedbackList(): Observable<Feedback[]>{\n    return this.httpClient.get<Feedback[]>(`${this.baseUrl}`);\n  }\n  getFeedbackById(id: number): Observable<Feedback>{\n    return this.httpClient.get<Feedback>(`${this.baseUrl}/${id}`);\n  }\n  updateFeedback(id: number, feedback: Feedback): Observable<Object>{\n    return this.httpClient.put(`${this.baseUrl}`,feedback);\n  }\n\n  deleteFeedback(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAC,gCAAgC;EACF;EAE9CC,cAAcA,CAACC,QAAiB;IAC9B,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,QAAQ,CAAC;EAC/D;EAGAE,eAAeA,CAAA;IACb,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EAC3D;EACAM,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC/D;EACAC,cAAcA,CAACD,EAAU,EAAEL,QAAkB;IAC3C,OAAO,IAAI,CAACH,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,EAAE,EAACE,QAAQ,CAAC;EACxD;EAEAQ,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;;uBArBWV,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAflB,eAAe;MAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}