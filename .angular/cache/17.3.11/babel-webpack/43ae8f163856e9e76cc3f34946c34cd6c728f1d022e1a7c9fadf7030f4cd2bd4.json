{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PatientService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseUrl = \"http://localhost:8080/patient\";\n  }\n  createPatient(patient) {\n    return this.httpclient.post(`${this.baseUrl}`, patient);\n  }\n  getPatientList() {\n    return this.httpclient.get(`${this.baseUrl}`);\n  }\n  getPatientById(id) {\n    return this.httpclient.get(`${this.baseUrl}/${id}`);\n  }\n  updatePatient(id, doctor) {\n    return this.httpclient.put(`${this.baseUrl}`, doctor);\n  }\n  deletePatient(id) {\n    return this.httpclient.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function PatientService_Factory(t) {\n      return new (t || PatientService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PatientService,\n      factory: PatientService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PatientService","constructor","httpclient","baseUrl","createPatient","patient","post","getPatientList","get","getPatientById","id","updatePatient","doctor","put","deletePatient","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\service\\patient.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Patient } from '../model/patient';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  private baseUrl=\"http://localhost:8080/patient\";\n  constructor(private httpclient: HttpClient) { }\n\n\n  createPatient(patient:Patient): Observable<any>{\n    return this.httpclient.post<any>(`${this.baseUrl}`, patient);\n  }\n  getPatientList(): Observable<Patient[]>{\n    return this.httpclient.get<Patient[]>(`${this.baseUrl}`);\n  }\n  getPatientById(id: number): Observable<Patient>{\n    return this.httpclient.get<Patient>(`${this.baseUrl}/${id}`);\n  }\n  updatePatient(id: number, doctor: Patient): Observable<Object>{\n    return this.httpclient.put(`${this.baseUrl}`,doctor);\n  }\n\n  deletePatient(id: number): Observable<Object>{\n    return this.httpclient.delete(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAC,+BAA+B;EACD;EAG9CC,aAAaA,CAACC,OAAe;IAC3B,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,OAAO,CAAC;EAC9D;EACAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAY,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EAC1D;EACAM,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAU,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC9D;EACAC,aAAaA,CAACD,EAAU,EAAEE,MAAe;IACvC,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,EAAE,EAACS,MAAM,CAAC;EACtD;EAEAE,aAAaA,CAACJ,EAAU;IACtB,OAAO,IAAI,CAACR,UAAU,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;;uBApBWV,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdnB,cAAc;MAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}