{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/availabledates.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction AvailabilityListComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AvailabilityListComponent_tr_21_Template_button_click_10_listener() {\n      const availabledate_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateAvailabledates(availabledate_r2.availabilityId));\n    });\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function AvailabilityListComponent_tr_21_Template_button_click_12_listener() {\n      const availabledate_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteAvailabledates(availabledate_r2.availabilityId));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const availabledate_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(availabledate_r2.availabilityId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(availabledate_r2.doctor.doctorId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(availabledate_r2.fromDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(availabledate_r2.endDate);\n  }\n}\nexport class AvailabilityListComponent {\n  constructor(availabledatesService, router) {\n    this.availabledatesService = availabledatesService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.getAvailabledates();\n  }\n  getAvailabledates() {\n    this.availabledatesService.getAvailabledatesList().subscribe(data => {\n      this.availabledates = data;\n    });\n  }\n  updateAvailabledates(id) {\n    console.log(id);\n    this.router.navigate(['/landing-page/update-availabilitydates', id]);\n  }\n  deleteAvailabledates(id) {\n    // console.log(id);\n    // this.router.navigate(['/landing-page/delete-user', id]);\n    this.availabledatesService.deleteAvailabledates(id).subscribe(data => {\n      console.log(data);\n      this.getAvailabledates();\n    }, error => {\n      console.log(\"Not Delete\");\n    });\n  }\n  static {\n    this.ɵfac = function AvailabilityListComponent_Factory(t) {\n      return new (t || AvailabilityListComponent)(i0.ɵɵdirectiveInject(i1.AvailabledatesService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AvailabilityListComponent,\n      selectors: [[\"app-availability-list\"]],\n      decls: 22,\n      vars: 1,\n      consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [\"routerLink\", \"/landing-page/create-availabilitydates\", 1, \"btn\", \"btn-primary\", \"ml-auto\", \"ml-5\", \"mb-3\"], [1, \"table\", \"table-striped\", 2, \"margin-bottom\", \"100px\"], [4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", 1, \"btn\", \"btn-info\", 3, \"click\"], [\"button\", \"\", 1, \"btn\", \"btn-danger\", 2, \"margin-left\", \"2px\", 3, \"click\"]],\n      template: function AvailabilityListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\")(3, \"u\");\n          i0.ɵɵtext(4, \"Availabledates List\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(5, \"button\", 2);\n          i0.ɵɵtext(6, \" Add Availabledates \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"table\", 3)(8, \"thead\")(9, \"tr\")(10, \"th\");\n          i0.ɵɵtext(11, \"Availabledates Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"th\");\n          i0.ɵɵtext(13, \"Doctor Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"th\");\n          i0.ɵɵtext(15, \"From Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"th\");\n          i0.ɵɵtext(17, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"th\");\n          i0.ɵɵtext(19, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(20, \"tbody\");\n          i0.ɵɵtemplate(21, AvailabilityListComponent_tr_21_Template, 14, 4, \"tr\", 4);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(21);\n          i0.ɵɵproperty(\"ngForOf\", ctx.availabledates);\n        }\n      },\n      dependencies: [i3.NgForOf, i2.RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AvailabilityListComponent_tr_21_Template_button_click_10_listener","availabledate_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","updateAvailabledates","availabilityId","AvailabilityListComponent_tr_21_Template_button_click_12_listener","deleteAvailabledates","ɵɵadvance","ɵɵtextInterpolate","doctor","doctorId","fromDate","endDate","AvailabilityListComponent","constructor","availabledatesService","router","ngOnInit","getAvailabledates","getAvailabledatesList","subscribe","data","availabledates","id","console","log","navigate","error","ɵɵdirectiveInject","i1","AvailabledatesService","i2","Router","selectors","decls","vars","consts","template","AvailabilityListComponent_Template","rf","ctx","ɵɵtemplate","AvailabilityListComponent_tr_21_Template","ɵɵproperty"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\landing-page\\availabilitydates\\availability-list\\availability-list.component.ts","C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\landing-page\\availabilitydates\\availability-list\\availability-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Availabledates } from 'src/app/model/availabledates';\nimport { AvailabledatesService } from 'src/app/service/availabledates.service';\n\n@Component({\n  selector: 'app-availability-list',\n  templateUrl: './availability-list.component.html',\n  styleUrls: ['./availability-list.component.css']\n})\nexport class AvailabilityListComponent implements OnInit {\n\n\n  availabledates: Availabledates[];\n\n  constructor(private availabledatesService: AvailabledatesService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getAvailabledates();\n  }\n\n  getAvailabledates(){\n    this.availabledatesService.getAvailabledatesList().subscribe(data => {\n      this.availabledates = data;\n    });\n  }\n\n  updateAvailabledates(id: number){\n    console.log(id);\n    this.router.navigate(['/landing-page/update-availabilitydates', id]);\n  }\n\n\n\n  deleteAvailabledates(id: number){\n    // console.log(id);\n    // this.router.navigate(['/landing-page/delete-user', id]);\n    this.availabledatesService.deleteAvailabledates(id).subscribe(\n      data => {\n        console.log(data);\n        this.getAvailabledates();\n      }, error => {\n        console.log(\"Not Delete\")\n      }\n    )\n\n}\n}\n","<div class=\"container\">\n\n  <div class=\"row justify-content-center mt-5\">\n    <h1> <u>Availabledates List</u> </h1>\n  </div>\n  <button routerLink=\"/landing-page/create-availabilitydates\" class=\"btn btn-primary ml-auto ml-5 mb-3\">\n    Add Availabledates\n  </button>\n<table class=\"table table-striped \" style=\"margin-bottom: 100px;\">\n  <thead>\n    <tr>\n      <th>Availabledates Id</th>\n\n      <th>Doctor Id</th>\n      <th>From Date</th>\n      <th>End Date</th>\n      <th>Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let availabledate of availabledates\">\n      <td>{{availabledate.availabilityId}}</td>\n\n      <td>{{availabledate.doctor.doctorId}}</td>\n      <td>{{availabledate.fromDate}}</td>\n      <td>{{availabledate.endDate}}</td>\n\n\n\n      <td>\n        <button button (click) = \"updateAvailabledates(availabledate.availabilityId)\" class=\"btn btn-info\" >Update</button>\n        <button button (click) = \"deleteAvailabledates(availabledate.availabilityId)\" class=\"btn btn-danger\" style=\"margin-left: 2px;\" >Delete</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n"],"mappings":";;;;;;;ICqBMA,EADF,CAAAC,cAAA,SAAiD,SAC3C;IAAAD,EAAA,CAAAE,MAAA,GAAgC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAEzCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAiC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1CH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACnCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAKhCH,EADF,CAAAC,cAAA,SAAI,iBACkG;IAArFD,EAAA,CAAAI,UAAA,mBAAAC,kEAAA;MAAA,MAAAC,gBAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA,EAAAC,SAAA;MAAA,MAAAC,MAAA,GAAAV,EAAA,CAAAW,aAAA;MAAA,OAAAX,EAAA,CAAAY,WAAA,CAAWF,MAAA,CAAAG,oBAAA,CAAAP,gBAAA,CAAAQ,cAAA,CAAkD;IAAA,EAAC;IAAuBd,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACnHH,EAAA,CAAAC,cAAA,iBAAgI;IAAjHD,EAAA,CAAAI,UAAA,mBAAAW,kEAAA;MAAA,MAAAT,gBAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA,EAAAC,SAAA;MAAA,MAAAC,MAAA,GAAAV,EAAA,CAAAW,aAAA;MAAA,OAAAX,EAAA,CAAAY,WAAA,CAAWF,MAAA,CAAAM,oBAAA,CAAAV,gBAAA,CAAAQ,cAAA,CAAkD;IAAA,EAAC;IAAmDd,EAAA,CAAAE,MAAA,cAAM;IAE1IF,EAF0I,CAAAG,YAAA,EAAS,EAC5I,EACF;;;;IAZCH,EAAA,CAAAiB,SAAA,GAAgC;IAAhCjB,EAAA,CAAAkB,iBAAA,CAAAZ,gBAAA,CAAAQ,cAAA,CAAgC;IAEhCd,EAAA,CAAAiB,SAAA,GAAiC;IAAjCjB,EAAA,CAAAkB,iBAAA,CAAAZ,gBAAA,CAAAa,MAAA,CAAAC,QAAA,CAAiC;IACjCpB,EAAA,CAAAiB,SAAA,GAA0B;IAA1BjB,EAAA,CAAAkB,iBAAA,CAAAZ,gBAAA,CAAAe,QAAA,CAA0B;IAC1BrB,EAAA,CAAAiB,SAAA,GAAyB;IAAzBjB,EAAA,CAAAkB,iBAAA,CAAAZ,gBAAA,CAAAgB,OAAA,CAAyB;;;ADfnC,OAAM,MAAOC,yBAAyB;EAKpCC,YAAoBC,qBAA4C,EAAUC,MAAc;IAApE,KAAAD,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAC,MAAM,GAANA,MAAM;EAAY;EAE5FC,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACH,qBAAqB,CAACI,qBAAqB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAClE,IAAI,CAACC,cAAc,GAAGD,IAAI;IAC5B,CAAC,CAAC;EACJ;EAEAlB,oBAAoBA,CAACoB,EAAU;IAC7BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACf,IAAI,CAACP,MAAM,CAACU,QAAQ,CAAC,CAAC,wCAAwC,EAAEH,EAAE,CAAC,CAAC;EACtE;EAIAjB,oBAAoBA,CAACiB,EAAU;IAC7B;IACA;IACA,IAAI,CAACR,qBAAqB,CAACT,oBAAoB,CAACiB,EAAE,CAAC,CAACH,SAAS,CAC3DC,IAAI,IAAG;MACLG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjB,IAAI,CAACH,iBAAiB,EAAE;IAC1B,CAAC,EAAES,KAAK,IAAG;MACTH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B,CAAC,CACF;EAEL;;;uBApCaZ,yBAAyB,EAAAvB,EAAA,CAAAsC,iBAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAxC,EAAA,CAAAsC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAzBnB,yBAAyB;MAAAoB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCP7BjD,EAHT,CAAAC,cAAA,aAAuB,aAEwB,SACvC,QAAI;UAAAD,EAAA,CAAAE,MAAA,0BAAmB;UAC7BF,EAD6B,CAAAG,YAAA,EAAI,EAAM,EACjC;UACNH,EAAA,CAAAC,cAAA,gBAAsG;UACpGD,EAAA,CAAAE,MAAA,2BACF;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAILH,EAHN,CAAAC,cAAA,eAAkE,YACzD,SACD,UACE;UAAAD,EAAA,CAAAE,MAAA,yBAAiB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAE1BH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,iBAAS;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAClBH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,iBAAS;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAClBH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACjBH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,eAAO;UAEfF,EAFe,CAAAG,YAAA,EAAK,EACb,EACC;UACRH,EAAA,CAAAC,cAAA,aAAO;UACLD,EAAA,CAAAmD,UAAA,KAAAC,wCAAA,iBAAiD;UAiBrDpD,EAHE,CAAAG,YAAA,EAAQ,EACF,EAEF;;;UAjB4BH,EAAA,CAAAiB,SAAA,IAAiB;UAAjBjB,EAAA,CAAAqD,UAAA,YAAAH,GAAA,CAAAlB,cAAA,CAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}