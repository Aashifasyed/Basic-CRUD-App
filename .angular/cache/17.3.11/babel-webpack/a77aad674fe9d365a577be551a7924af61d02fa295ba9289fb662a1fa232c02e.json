{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppointmentService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"http://localhost:8080/appointment\";\n  }\n  createAppointment(appointment) {\n    return this.httpClient.post(`${this.baseUrl}`, appointment);\n  }\n  getAppointmentList() {\n    return this.httpClient.get(`${this.baseUrl}`);\n  }\n  getAppointmentById(id) {\n    return this.httpClient.get(`${this.baseUrl}/${id}`);\n  }\n  updateAppointment(id, appointment) {\n    return this.httpClient.put(`${this.baseUrl}`, appointment);\n  }\n  deleteAppointment(id) {\n    return this.httpClient.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function AppointmentService_Factory(t) {\n      return new (t || AppointmentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppointmentService,\n      factory: AppointmentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AppointmentService","constructor","httpClient","baseUrl","createAppointment","appointment","post","getAppointmentList","get","getAppointmentById","id","updateAppointment","put","deleteAppointment","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Aashifa\\OneDrive\\Desktop\\doctor-frontend-main\\src\\app\\service\\appointment.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Appointment } from '../model/appointment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n  private baseUrl=\"http://localhost:8080/appointment\";\n  constructor(private httpClient: HttpClient) { }\n\n  createAppointment(appointment:Appointment): Observable<any>{\n    return this.httpClient.post<any>(`${this.baseUrl}`, appointment);\n  }\n\n\n  getAppointmentList(): Observable<Appointment[]>{\n    return this.httpClient.get<Appointment[]>(`${this.baseUrl}`);\n  }\n  getAppointmentById(id: number): Observable<Appointment>{\n    return this.httpClient.get<Appointment>(`${this.baseUrl}/${id}`);\n  }\n  updateAppointment(id: number, appointment: Appointment): Observable<Object>{\n    return this.httpClient.put(`${this.baseUrl}`,appointment);\n  }\n\n  deleteAppointment(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAC,mCAAmC;EACL;EAE9CC,iBAAiBA,CAACC,WAAuB;IACvC,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,WAAW,CAAC;EAClE;EAGAE,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAgB,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EAC9D;EACAM,kBAAkBA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAc,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EAClE;EACAC,iBAAiBA,CAACD,EAAU,EAAEL,WAAwB;IACpD,OAAO,IAAI,CAACH,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,EAAE,EAACE,WAAW,CAAC;EAC3D;EAEAQ,iBAAiBA,CAACH,EAAU;IAC1B,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;;uBArBWV,kBAAkB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlBlB,kBAAkB;MAAAmB,OAAA,EAAlBnB,kBAAkB,CAAAoB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}